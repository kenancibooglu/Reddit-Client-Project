{"ast":null,"code":"export const fetchRedditHome = async () => {\n  const response = await fetch('https://www.reddit.com/r/home.json');\n  const data = await response.json();\n  return data;\n};\nfetchRedditHome().then(data => {\n  console.log(data);\n});\nexport const fetchRedditPopular = async () => {\n  const response = await fetch('https://www.reddit.com/r/popular.json');\n  const data = await response.json();\n  return data;\n};\nfetchRedditPopular().then(data => {\n  console.log(data);\n});\nexport const fetchRedditGamingValheim = async () => {\n  const response = await fetch('https://www.reddit.com/r/valheim.json');\n  const data = await response.json();\n  return data;\n};\nfetchRedditGamingValheim().then(data => {\n  console.log(data);\n});\nexport const fetchRedditGamingGenshin = async () => {\n  const response = await fetch(\"https://www.reddit.com/r/genshin_impact.json\");\n  const data = await response.json();\n  return data;\n};\nfetchRedditGamingGenshin().then(data => {\n  console.log(data);\n});\nexport const fetchRedditGamingMineCraft = async () => {\n  const response = await fetch(\"https://www.reddit.com/r/minecraft.json\");\n  const data = await response.json();\n  return data;\n};\nfetchRedditGamingMineCraft().then(data => {\n  console.log(data);\n});\nexport const fetchRedditGamingPokimane = async () => {\n  const response = await fetch(\"https://www.reddit.com/r/pokimane.json\");\n  const data = await response.json();\n  return data;\n};\nfetchRedditGamingPokimane().then(data => {\n  console.log(data);\n});\nexport const fetchRedditGamingCallofDuty = async () => {\n  const response = await fetch(\"https://www.reddit.com/r/hollow_knight_silksong.json\");\n  const data = await response.json();\n  return data;\n};\nfetchRedditGamingCallofDuty().then(data => {\n  console.log(data);\n});","map":{"version":3,"names":["fetchRedditHome","response","fetch","data","json","then","console","log","fetchRedditPopular","fetchRedditGamingValheim","fetchRedditGamingGenshin","fetchRedditGamingMineCraft","fetchRedditGamingPokimane","fetchRedditGamingCallofDuty"],"sources":["/Users/cibo24/Desktop/Full Stack Developer/FrontEnd Developer/create-Project/Reddit-Client-Project/src/api/api.js"],"sourcesContent":["export const fetchRedditHome = async () => {\n    const response = await fetch('https://www.reddit.com/r/home.json');\n    const data = await response.json();\n    return data;\n  };\n  \n  fetchRedditHome().then(data => {\n    console.log(data);\n  });\n\n  export const fetchRedditPopular = async () => {\n    const response = await fetch('https://www.reddit.com/r/popular.json');\n    const data = await response.json();\n    return data;\n  };\n\n  fetchRedditPopular().then(data => {\n    console.log(data);\n  });\n\n\n  export const fetchRedditGamingValheim = async () => {\n    const response = await fetch('https://www.reddit.com/r/valheim.json');\n    const data = await response.json();\n    return data;\n  };\n\n  fetchRedditGamingValheim().then(data => {\n    console.log(data);\n  });\n\n  export const fetchRedditGamingGenshin = async() => {\n    const response = await fetch(\"https://www.reddit.com/r/genshin_impact.json\");\n    const data = await response.json();\n    return data\n  }\n\n  fetchRedditGamingGenshin().then(data => {\n    console.log(data);\n  });\n\n  export const fetchRedditGamingMineCraft = async() => {\n    const response = await fetch(\"https://www.reddit.com/r/minecraft.json\")\n    const data = await response.json();\n    return data\n  }\n\n  fetchRedditGamingMineCraft().then(data => {\n    console.log(data);\n  })\n\n  export const fetchRedditGamingPokimane = async() => {\n    const response = await fetch(\"https://www.reddit.com/r/pokimane.json\")\n    const data = await response.json();\n    return data\n  }\n\n  fetchRedditGamingPokimane().then(data => {\n    console.log(data);\n  })\n\n\n  export const fetchRedditGamingCallofDuty = async() => {\n    const response = await fetch(\"https://www.reddit.com/r/hollow_knight_silksong.json\")\n    const data = await response.json();\n    return data\n  }\n\n  fetchRedditGamingCallofDuty().then(data => {\n    console.log(data);\n  })\n\n\n  "],"mappings":"AAAA,OAAO,MAAMA,eAAe,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAClE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDH,eAAe,CAAC,CAAC,CAACK,IAAI,CAACF,IAAI,IAAI;EAC7BG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMK,kBAAkB,GAAG,MAAAA,CAAA,KAAY;EAC5C,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;EACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDK,kBAAkB,CAAC,CAAC,CAACH,IAAI,CAACF,IAAI,IAAI;EAChCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAGF,OAAO,MAAMM,wBAAwB,GAAG,MAAAA,CAAA,KAAY;EAClD,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,CAAC;EACrE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDM,wBAAwB,CAAC,CAAC,CAACJ,IAAI,CAACF,IAAI,IAAI;EACtCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMO,wBAAwB,GAAG,MAAAA,CAAA,KAAW;EACjD,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;EAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDO,wBAAwB,CAAC,CAAC,CAACL,IAAI,CAACF,IAAI,IAAI;EACtCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMQ,0BAA0B,GAAG,MAAAA,CAAA,KAAW;EACnD,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAC,yCAAyC,CAAC;EACvE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDQ,0BAA0B,CAAC,CAAC,CAACN,IAAI,CAACF,IAAI,IAAI;EACxCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAEF,OAAO,MAAMS,yBAAyB,GAAG,MAAAA,CAAA,KAAW;EAClD,MAAMX,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;EACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDS,yBAAyB,CAAC,CAAC,CAACP,IAAI,CAACF,IAAI,IAAI;EACvCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC;AAGF,OAAO,MAAMU,2BAA2B,GAAG,MAAAA,CAAA,KAAW;EACpD,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,CAAC;EACpF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAEDU,2BAA2B,CAAC,CAAC,CAACR,IAAI,CAACF,IAAI,IAAI;EACzCG,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;AACnB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}